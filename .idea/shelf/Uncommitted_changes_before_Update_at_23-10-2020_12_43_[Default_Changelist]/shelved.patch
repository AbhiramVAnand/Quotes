Index: app/src/main/java/phone/vishnu/quotes/activity/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package phone.vishnu.quotes.activity;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.AlarmManager;\r\nimport android.app.PendingIntent;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.yalantis.ucrop.UCrop;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.lang.reflect.Type;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Calendar;\r\nimport java.util.Collections;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\nimport phone.vishnu.quotes.R;\r\nimport phone.vishnu.quotes.data.QuoteData;\r\nimport phone.vishnu.quotes.data.QuoteListAsyncResponse;\r\nimport phone.vishnu.quotes.fragment.AboutFragment;\r\nimport phone.vishnu.quotes.fragment.BottomSheetFragment;\r\nimport phone.vishnu.quotes.fragment.ColorFragment;\r\nimport phone.vishnu.quotes.fragment.FavoriteFragment;\r\nimport phone.vishnu.quotes.fragment.FontFragment;\r\nimport phone.vishnu.quotes.fragment.PickFragment;\r\nimport phone.vishnu.quotes.fragment.QuoteFragment;\r\nimport phone.vishnu.quotes.helper.ExportHelper;\r\nimport phone.vishnu.quotes.helper.QuoteViewPagerAdapter;\r\nimport phone.vishnu.quotes.helper.SharedPreferenceHelper;\r\nimport phone.vishnu.quotes.model.Quote;\r\nimport phone.vishnu.quotes.receiver.NotificationReceiver;\r\n\r\npublic class MainActivity extends AppCompatActivity implements BottomSheetFragment.BottomSheetListener {\r\n\r\n    public static ProgressDialog bgDialog, fontDialog;\r\n    private SharedPreferenceHelper sharedPreferenceHelper;\r\n    private ExportHelper exportHelper;\r\n    private int PICK_IMAGE_ID = 36;\r\n    private int PERMISSION_REQ_CODE = 88;\r\n    private ConstraintLayout constraintLayout;\r\n    private QuoteViewPagerAdapter adapter;\r\n\r\n    @Override\r\n    protected void onCreate(final Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        sharedPreferenceHelper = new SharedPreferenceHelper(this);\r\n        exportHelper = new ExportHelper(this);\r\n\r\n        if (savedInstanceState == null) {\r\n            final Bundle extras = getIntent().getExtras();\r\n            if (extras != null && extras.getBoolean(\"NotificationClick\")) {\r\n\r\n                if (extras.getBoolean(\"ShareButton\")) {\r\n\r\n                    AsyncTask.execute(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            try {\r\n                                exportHelper.shareScreenshot(MainActivity.this, extras.getString(\"quote\"), extras.getString(\"author\"));\r\n                            } catch (Exception e) {\r\n                                FirebaseCrashlytics.getInstance().recordException(e);\r\n                                e.printStackTrace();\r\n                            }\r\n                        }\r\n                    });\r\n                } else if (extras.getBoolean(\"FavButton\")) {\r\n\r\n\r\n                    Gson gson = new Gson();\r\n                    String jsonSaved = sharedPreferenceHelper.getFavoriteArrayString();\r\n                    String jsonNewProductToAdd = gson.toJson(new Quote(extras.getString(\"quote\"), extras.getString(\"author\")));\r\n\r\n                    Type type = new TypeToken<ArrayList<Quote>>() {\r\n                    }.getType();\r\n                    ArrayList<Quote> productFromShared = gson.fromJson(jsonSaved, type);\r\n\r\n                    sharedPreferenceHelper.setFavoriteArrayString(String.valueOf(addFavorite(jsonSaved, jsonNewProductToAdd, productFromShared, extras.getString(\"quote\"))));\r\n                }\r\n            }\r\n        }\r\n\r\n        setContentView(R.layout.activity_main);\r\n        constraintLayout = findViewById(R.id.constraintLayout);\r\n\r\n        /*MobileAds.initialize(this, new OnInitializationCompleteListener() {\r\n            @Override\r\n            public void onInitializationComplete(InitializationStatus initializationStatus) {\r\n                AdView adView = new AdView(MainActivity.this);\r\n                adView.setAdUnitId(getString(R.string.banner_ad_unit_id));\r\n\r\n                constraintLayout.addView(adView);\r\n                adView.setAdSize(getAdSize());\r\n\r\n                Bundle extras = new Bundle();\r\n                extras.putString(\"max_ad_content_rating\", \"G\");\r\n\r\n                AdRequest adRequest = new AdRequest.Builder()\r\n                        .addNetworkExtrasBundle(AdMobAdapter.class, extras)\r\n                        .tagForChildDirectedTreatment(true)\r\n                        .build();\r\n\r\n                adView.loadAd(adRequest);\r\n            }\r\n        });*/\r\n\r\n        if (!isNetworkAvailable())\r\n            Toast.makeText(this, \"Please Connect to the Internet...\", Toast.LENGTH_SHORT).show();\r\n\r\n        final String backgroundPath = sharedPreferenceHelper.getBackgroundPath();\r\n\r\n        File f = new File(backgroundPath);\r\n        if (!(\"-1\".equals(backgroundPath)) && (f.exists()))\r\n            constraintLayout.setBackground(Drawable.createFromPath(backgroundPath));\r\n        else {\r\n\r\n            Toast.makeText(this, \"Choose a background\", Toast.LENGTH_LONG).show();\r\n\r\n            if (!isPermissionGranted())\r\n                isPermissionGranted();\r\n            else {\r\n                MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(MainActivity.this, R.style.AlertDialogTheme);\r\n\r\n                builder.setTitle(\"Choose a Background\");\r\n                builder.setCancelable(false);\r\n\r\n                final String[] items = {\"Plain Colour\", \"Image From Gallery\", \"Default Images\"};\r\n                builder.setItems(items, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        switch (which) {\r\n                            case 0: {\r\n                                getSupportFragmentManager().beginTransaction().add(R.id.constraintLayout, ColorFragment.newInstance(0)).addToBackStack(null).commit();\r\n                                break;\r\n                            }\r\n                            case 1: {\r\n                                Intent intent = new Intent(Intent.ACTION_GET_CONTENT);\r\n                                intent.setType(\"image/*\");\r\n                                startActivityForResult(intent, PICK_IMAGE_ID);\r\n                                break;\r\n                            }\r\n                            case 2: {\r\n                                bgDialog = ProgressDialog.show(MainActivity.this, \"\", \"Please Wait....\");\r\n                                bgDialog.setCancelable(false);\r\n                                getSupportFragmentManager().beginTransaction().add(R.id.constraintLayout, PickFragment.newInstance()).addToBackStack(null).commit();\r\n                                break;\r\n                            }\r\n                            default: {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                AlertDialog alertDialog = builder.create();\r\n                alertDialog.setCancelable(false);\r\n\r\n                alertDialog.getListView().setOnHierarchyChangeListener(\r\n                        new ViewGroup.OnHierarchyChangeListener() {\r\n                            @Override\r\n                            public void onChildViewAdded(View parent, View child) {\r\n                                CharSequence text = ((TextView) child).getText();\r\n                                int itemIndex = Arrays.asList(items).indexOf(text);\r\n                                if ((itemIndex == 2) && !isNetworkAvailable()) {\r\n                                    child.setEnabled(false);\r\n                                    child.setOnClickListener(null);\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onChildViewRemoved(View view, View view1) {\r\n                            }\r\n                        });\r\n                alertDialog.show();\r\n            }\r\n        }\r\n\r\n        ImageView menuIcon = findViewById(R.id.homeMenuIcon);\r\n        menuIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (getSupportFragmentManager().getBackStackEntryCount() == 0) {\r\n                    BottomSheetFragment bottomSheet = new BottomSheetFragment();\r\n                    bottomSheet.show(getSupportFragmentManager(), \"bottomSheetTag\");\r\n                }\r\n            }\r\n        });\r\n\r\n        AsyncTask.execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                adapter = new QuoteViewPagerAdapter(getSupportFragmentManager(), getFragments());\r\n                ((ViewPager) findViewById(R.id.viewPager)).setAdapter(adapter);\r\n            }\r\n        });\r\n\r\n        String s = sharedPreferenceHelper.getAlarmString();\r\n\r\n//        if (true) {\r\n        if (\"At 08:30 Daily\".equals(s)) {\r\n            myAlarm();\r\n        }\r\n    }\r\n\r\n    private void myAlarm() {\r\n\r\n        Calendar calendar = Calendar.getInstance();\r\n//        calendar.setTimeInMillis(System.currentTimeMillis());\r\n        calendar.set(Calendar.HOUR_OF_DAY, 8);\r\n        calendar.set(Calendar.MINUTE, 30);\r\n\r\n        if (calendar.getTime().compareTo(new Date()) < 0)\r\n            calendar.add(Calendar.DAY_OF_MONTH, 1);\r\n\r\n        Intent intent = new Intent(getApplicationContext(), NotificationReceiver.class);\r\n        PendingIntent pendingIntent = PendingIntent.getBroadcast(getApplicationContext(), 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n        AlarmManager alarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);\r\n\r\n        if (alarmManager != null) {\r\n            alarmManager.setRepeating(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), AlarmManager.INTERVAL_DAY, pendingIntent);\r\n        }\r\n    }\r\n\r\n    private List<Fragment> getFragments() {\r\n\r\n        final List<Fragment> fragments = new ArrayList<>();\r\n        new QuoteData().getQuotes(new QuoteListAsyncResponse() {\r\n            @Override\r\n            public void processFinished(ArrayList<Quote> quotes) {\r\n\r\n                Collections.shuffle(quotes);\r\n\r\n                for (int i = 0; i < quotes.size(); i++) {\r\n                    QuoteFragment quoteFragment = QuoteFragment.newInstance(quotes.get(i).getQuote(), quotes.get(i).getAuthor());\r\n                    fragments.add(quoteFragment);\r\n                }\r\n\r\n                adapter.notifyDataSetChanged();\r\n            }\r\n        });\r\n        return fragments;\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (resultCode == Activity.RESULT_OK && data != null) {\r\n\r\n            String file = exportHelper.getBGPath();\r\n\r\n            if (requestCode == PICK_IMAGE_ID)\r\n\r\n                UCrop.of(data.getData(), Uri.fromFile(new File(file)))\r\n                        .withAspectRatio(9, 16)\r\n                        .withMaxResultSize(1080, 1920)\r\n                        .start(this);\r\n\r\n            else if (requestCode == UCrop.REQUEST_CROP) {\r\n                constraintLayout.setBackground(Drawable.createFromPath(file));\r\n                sharedPreferenceHelper.setBackgroundPath(file);\r\n            }\r\n        } else Toast.makeText(this, \"Error...\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBottomSheetButtonClicked(int id) {\r\n        switch (id) {\r\n            case R.id.bottomSheetFav: {\r\n                FavoriteFragment fragment = FavoriteFragment.newInstance();\r\n                FragmentManager fragmentManager = getSupportFragmentManager();\r\n                fragmentManager.beginTransaction()\r\n                        .add(R.id.constraintLayout, fragment)\r\n                        .addToBackStack(null)\r\n                        .commit();\r\n                break;\r\n            }\r\n            case R.id.bottomSheetAbout: {\r\n                AboutFragment fragment = AboutFragment.newInstance();\r\n                FragmentManager fragmentManager = getSupportFragmentManager();\r\n                fragmentManager.beginTransaction()\r\n                        .add(R.id.constraintLayout, fragment)\r\n                        .addToBackStack(null)\r\n                        .commit();\r\n                break;\r\n            }\r\n            case R.id.bottomSheetImageChooser: {\r\n                if (!isPermissionGranted())\r\n                    isPermissionGranted();\r\n                else {\r\n                    MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(MainActivity.this, R.style.AlertDialogTheme);\r\n\r\n                    final String[] items = {\"Plain Colour\", \"Image From Gallery\", \"Default Images\"};\r\n                    builder.setItems(items, new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            switch (which) {\r\n                                case 0: {\r\n                                    getSupportFragmentManager().beginTransaction().add(R.id.constraintLayout, ColorFragment.newInstance(0)).addToBackStack(null).commit();\r\n                                    break;\r\n                                }\r\n                                case 1: {\r\n                                    Intent intent = new Intent(Intent.ACTION_GET_CONTENT);\r\n                                    intent.setType(\"image/*\");\r\n                                    startActivityForResult(intent, PICK_IMAGE_ID);\r\n                                    break;\r\n                                }\r\n                                case 2: {\r\n                                    bgDialog = ProgressDialog.show(MainActivity.this, \"\", \"Please Wait....\");\r\n                                    getSupportFragmentManager().beginTransaction().add(R.id.constraintLayout, PickFragment.newInstance()).addToBackStack(null).commit();\r\n                                    break;\r\n                                }\r\n                                default: {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                    AlertDialog alertDialog = builder.create();\r\n\r\n                    alertDialog.getListView().setOnHierarchyChangeListener(\r\n                            new ViewGroup.OnHierarchyChangeListener() {\r\n                                @Override\r\n                                public void onChildViewAdded(View parent, View child) {\r\n                                    CharSequence text = ((TextView) child).getText();\r\n                                    int itemIndex = Arrays.asList(items).indexOf(text);\r\n                                    if ((itemIndex == 2) && !isNetworkAvailable()) {\r\n                                        child.setEnabled(false);\r\n                                        child.setOnClickListener(null);\r\n                                    }\r\n                                }\r\n\r\n                                @Override\r\n                                public void onChildViewRemoved(View view, View view1) {\r\n                                }\r\n                            });\r\n                    alertDialog.show();\r\n                }\r\n                break;\r\n            }\r\n            case R.id.bottomSheetColorChooser: {\r\n                getSupportFragmentManager().beginTransaction().add(R.id.constraintLayout, ColorFragment.newInstance(1)).addToBackStack(null).commit();\r\n                break;\r\n            }\r\n            case R.id.bottomSheetFont: {\r\n                fontDialog = ProgressDialog.show(MainActivity.this, \"\", \"Please Wait....\");\r\n                getSupportFragmentManager().beginTransaction().add(R.id.constraintLayout, FontFragment.newInstance()).addToBackStack(null).commit();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private void showPermissionDeniedDialog() {\r\n\r\n        final AlertDialog.Builder builder =\r\n                new AlertDialog.Builder(MainActivity.this, R.style.AlertDialogTheme);\r\n        builder.setTitle(\"Permission Denied\");\r\n        builder.setMessage(\"Please Accept Permission to Capture Screenshot of the Screen\");\r\n        builder.setCancelable(true);\r\n        builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.cancel();\r\n                ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, PERMISSION_REQ_CODE);\r\n            }\r\n        });\r\n        builder.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.cancel();\r\n            }\r\n        });\r\n        builder.show();\r\n\r\n    }\r\n\r\n    private boolean isPermissionGranted() {\r\n        if (Build.VERSION.SDK_INT >= 22) {\r\n            if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\r\n                if (ActivityCompat.shouldShowRequestPermissionRationale(MainActivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) {\r\n                    showPermissionDeniedDialog();\r\n                } else {\r\n                    ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, PERMISSION_REQ_CODE);\r\n                }\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private boolean isNetworkAvailable() {\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();\r\n        return activeNetworkInfo != null && activeNetworkInfo.isConnected();\r\n    }\r\n\r\n    public QuoteViewPagerAdapter getQuoteViewPagerAdapter() {\r\n        return adapter;\r\n    }\r\n\r\n    private JSONArray addFavorite(String jsonSaved, String jsonNewProductToAdd, ArrayList<Quote> productFromShared, String quote) {\r\n        JSONArray jsonArrayProduct = new JSONArray();\r\n        try {\r\n            if (jsonSaved.length() != 0) {\r\n                if (!isPresent(productFromShared, quote)) {\r\n                    jsonArrayProduct = new JSONArray(jsonSaved);\r\n                    jsonArrayProduct.put(new JSONObject(jsonNewProductToAdd));\r\n                }\r\n            } else {\r\n                productFromShared = new ArrayList<>();\r\n            }\r\n        } catch (JSONException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n            e.printStackTrace();\r\n        }\r\n        return jsonArrayProduct;\r\n    }\r\n\r\n    private boolean isPresent(ArrayList<Quote> productFromShared, String quote) {\r\n        boolean isPresent = false;\r\n        for (int i = 0; i < productFromShared.size(); i++) {\r\n            if (productFromShared.get(i).getQuote().trim().toLowerCase().equals(quote.trim().toLowerCase())) {\r\n                isPresent = true;\r\n            }\r\n        }\r\n        return isPresent;\r\n    }\r\n\r\n    public void notifyViewPagerDataSetChanged() {\r\n        adapter.notifyDataSetChanged();\r\n    }\r\n\r\n    public void setConstraintLayoutBackground(Drawable drawable) {\r\n        constraintLayout.setBackground(drawable);\r\n    }\r\n\r\n    /*private AdSize getAdSize() {\r\n        // Step 2 - Determine the screen width (less decorations) to use for the ad width.\r\n        Display display = getWindowManager().getDefaultDisplay();\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        display.getMetrics(outMetrics);\r\n\r\n        float widthPixels = outMetrics.widthPixels;\r\n        float density = outMetrics.density;\r\n\r\n        int adWidth = (int) (widthPixels / density);\r\n\r\n        // Step 3 - Get adaptive ad size and return for setting on the ad view.\r\n        return AdSize.getCurrentOrientationAnchoredAdaptiveBannerAdSize(this, adWidth);\r\n    }*/\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/phone/vishnu/quotes/activity/MainActivity.java	(revision 52a542db94a851d54c298180e4fcce2bfeac5dc5)
+++ app/src/main/java/phone/vishnu/quotes/activity/MainActivity.java	(date 1603372090348)
@@ -70,10 +70,10 @@
 public class MainActivity extends AppCompatActivity implements BottomSheetFragment.BottomSheetListener {
 
     public static ProgressDialog bgDialog, fontDialog;
+    private final int PICK_IMAGE_ID = 36;
+    private final int PERMISSION_REQ_CODE = 88;
     private SharedPreferenceHelper sharedPreferenceHelper;
     private ExportHelper exportHelper;
-    private int PICK_IMAGE_ID = 36;
-    private int PERMISSION_REQ_CODE = 88;
     private ConstraintLayout constraintLayout;
     private QuoteViewPagerAdapter adapter;
 
@@ -120,6 +120,24 @@
         setContentView(R.layout.activity_main);
         constraintLayout = findViewById(R.id.constraintLayout);
 
+/*
+
+        BubbleShowCaseBuilder firstShowCaseBuilder =
+                new BubbleShowCaseBuilder(MainActivity.this)
+                        .title("foo")
+                        .targetView();
+
+        BubbleShowCaseBuilder secondShowCaseBuilder;
+        BubbleShowCaseBuilder thirdShowCaseBuilder;
+        new BubbleShowCaseSequence()
+                .addShowCase(firstShowCaseBuilder)
+                .addShowCase(secondShowCaseBuilder)
+                .addShowCase(thirdShowCaseBuilder)
+                .show()
+
+*/
+
+
         /*MobileAds.initialize(this, new OnInitializationCompleteListener() {
             @Override
             public void onInitializationComplete(InitializationStatus initializationStatus) {
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Thu Oct 22 17:59:23 IST 2020\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.5-bin.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision 52a542db94a851d54c298180e4fcce2bfeac5dc5)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1603371845215)
@@ -1,6 +1,6 @@
-#Thu Oct 22 17:59:23 IST 2020
+#Thu Oct 22 18:34:05 IST 2020
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-all.zip
